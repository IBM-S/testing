Call: /usr/bin/ruby ../scripts/param_ils_2_3_run.rb "-numRun" "0" "-approach" "focused" "-userunlog" "1" "-validN" "0" "-pruning" "0" "-maxEvals" "10000" "-scenariofile" "FAll.scn"


seed: 1234
algo: bash GA.sh
tunerTimeout (CPU time): 100000000.0
maxWallTime: 8640000.0
maxEvals: 10000
run_obj: runlength
overall_obj: mean
instance_file: inst_p23/All.inst
test_instance_file: inst_p23/All.inst
N: 2000
cutoff_time: 1000000000.0
cutoff_length: 2147483647
R: 10
pertubation_strength_basic: 
pertubation_strength_scaling: false
p_restart: 0.01
Run 1
Level 
========================================================
Starting ILS for level 1, i.e. a limit of N=2000, and cutoff time=1000000000.0.
Current CPU time = 0, this run goes until 100000000.0 
========================================================
New Incumbent: 0, 100000000 [0, 0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
 Same incumbent, new precision:
New Incumbent: 0.1, 0.0 [1, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
          -> Take improving step to random alpha=150 beta=10.0 bound=3.0 crossoverRate=0.5 elitism=0.20 interAttemptRate=1 interMutationRate=0.2 intraMutationRate=0.2 populationSize=2000 probBestIndividual=0.7 probReversal=0.33 probSingle=0.50 (0.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random alpha=200 beta=0.5 bound=1.5 crossoverRate=0.75 elitism=0.1 interAttemptRate=1 interMutationRate=0.1 intraMutationRate=0.75 populationSize=800 probBestIndividual=0.6 probReversal=0.25 probSingle=0.33 (0.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random alpha=10 beta=0.1 bound=2.5 crossoverRate=0.6 elitism=0.1 interAttemptRate=5 interMutationRate=0.5 intraMutationRate=0.5 populationSize=50 probBestIndividual=0.7 probReversal=0.50 probSingle=0.0 (0.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random alpha=150 beta=0.05 bound=2.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=10 interMutationRate=0.5 intraMutationRate=0.5 populationSize=200 probBestIndividual=0.7 probReversal=0.50 probSingle=0.75 (0.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random alpha=100 beta=0.1 bound=4.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=20 interMutationRate=0.1 intraMutationRate=0.75 populationSize=800 probBestIndividual=0.7 probReversal=1.0 probSingle=0.25 (0.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random alpha=200 beta=0.01 bound=2.5 crossoverRate=0.6 elitism=0.01 interAttemptRate=2 interMutationRate=0.1 intraMutationRate=0.1 populationSize=500 probBestIndividual=0.6 probReversal=0.75 probSingle=0.33 (0.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random alpha=150 beta=0.01 bound=1.5 crossoverRate=0.6 elitism=0.1 interAttemptRate=20 interMutationRate=0.5 intraMutationRate=1.0 populationSize=1000 probBestIndividual=1.0 probReversal=0.33 probSingle=0.33 (0.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random alpha=200 beta=0.5 bound=1.5 crossoverRate=1.0 elitism=0.05 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=1000 probBestIndividual=1.0 probReversal=0.25 probSingle=0.0 (0.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random alpha=50 beta=0.05 bound=1.0 crossoverRate=0.3 elitism=0.05 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=800 probBestIndividual=1.0 probReversal=0.25 probSingle=0.33 (0.0 [based on 1 runs with cutoff 1000000000.0])

          -> Take improving step to random alpha=200 beta=0.001 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=1000 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 1 runs with cutoff 1000000000.0])

   BLS in iteration 1, start with alpha=200 beta=0.001 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=1000 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["beta: 0.001->10.0"], evaluating ...
          -> Take improving step to neighbour alpha=200 beta=10.0 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=1000 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 1 runs with cutoff 1000000000.0]) with flip 1

          
============= Performing 1 bonus runs of state: alpha=200 beta=10.0 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=1000 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 1 runs with cutoff 1000000000.0]) ============ 

State wants more detail (1+1) than incumbent (1), doing incumbent first:
alpha=200 beta=10.0 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=1000 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 1 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=400 probBestIndividual=0.8 probReversal=0.33 probSingle=0.33 (0.0 [based on 1 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 1.3, 0.0 [2, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
          -> After 1 bonus runs: alpha=200 beta=10.0 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=1000 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 2 runs with cutoff 1000000000.0])

    Changing ["populationSize: 1000->500"], evaluating ...
          -> Take improving step to neighbour alpha=200 beta=10.0 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 2 runs with cutoff 1000000000.0]) with flip 2

          
============= Performing 1 bonus runs of state: alpha=200 beta=10.0 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 2 runs with cutoff 1000000000.0]) ============ 

State wants more detail (2+1) than incumbent (2), doing incumbent first:
alpha=200 beta=10.0 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 2 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=400 probBestIndividual=0.8 probReversal=0.33 probSingle=0.33 (0.0 [based on 2 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 1.7000000000000004, 0.0 [3, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
          -> After 1 bonus runs: alpha=200 beta=10.0 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 3 runs with cutoff 1000000000.0])

    Changing ["crossoverRate: 0.5->0.4"], evaluating ...
          -> Take improving step to neighbour alpha=200 beta=10.0 bound=3.0 crossoverRate=0.4 elitism=0.05 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 3 runs with cutoff 1000000000.0]) with flip 3

          
============= Performing 1 bonus runs of state: alpha=200 beta=10.0 bound=3.0 crossoverRate=0.4 elitism=0.05 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 3 runs with cutoff 1000000000.0]) ============ 

State wants more detail (3+1) than incumbent (3), doing incumbent first:
alpha=200 beta=10.0 bound=3.0 crossoverRate=0.4 elitism=0.05 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 3 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=400 probBestIndividual=0.8 probReversal=0.33 probSingle=0.33 (0.0 [based on 3 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 2.2000000000000006, 0.0 [4, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
          -> After 1 bonus runs: alpha=200 beta=10.0 bound=3.0 crossoverRate=0.4 elitism=0.05 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 4 runs with cutoff 1000000000.0])

    Changing ["elitism: 0.05->0.20"], evaluating ...
          -> Take improving step to neighbour alpha=200 beta=10.0 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 4 runs with cutoff 1000000000.0]) with flip 4

          
============= Performing 1 bonus runs of state: alpha=200 beta=10.0 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 4 runs with cutoff 1000000000.0]) ============ 

State wants more detail (4+1) than incumbent (4), doing incumbent first:
alpha=200 beta=10.0 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 4 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=400 probBestIndividual=0.8 probReversal=0.33 probSingle=0.33 (0.0 [based on 4 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 2.800000000000001, 0.0 [5, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
          -> After 1 bonus runs: alpha=200 beta=10.0 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 5 runs with cutoff 1000000000.0])

    Changing ["interMutationRate: 0.2->0.25"], evaluating ...
          -> Take improving step to neighbour alpha=200 beta=10.0 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 5 runs with cutoff 1000000000.0]) with flip 5

          
============= Performing 1 bonus runs of state: alpha=200 beta=10.0 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 5 runs with cutoff 1000000000.0]) ============ 

State wants more detail (5+1) than incumbent (5), doing incumbent first:
alpha=200 beta=10.0 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 5 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=400 probBestIndividual=0.8 probReversal=0.33 probSingle=0.33 (0.0 [based on 5 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 3.5000000000000018, 0.0 [6, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
          -> After 1 bonus runs: alpha=200 beta=10.0 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 6 runs with cutoff 1000000000.0])

    Changing ["beta: 10.0->0.001"], evaluating ...
          -> Take improving step to neighbour alpha=200 beta=0.001 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 6 runs with cutoff 1000000000.0]) with flip 6

          
============= Performing 1 bonus runs of state: alpha=200 beta=0.001 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 6 runs with cutoff 1000000000.0]) ============ 

State wants more detail (6+1) than incumbent (6), doing incumbent first:
alpha=200 beta=0.001 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 6 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=400 probBestIndividual=0.8 probReversal=0.33 probSingle=0.33 (0.0 [based on 6 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 4.300000000000001, 0.0 [7, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
          -> After 1 bonus runs: alpha=200 beta=0.001 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 7 runs with cutoff 1000000000.0])

    Changing ["probSingle: 1.0->0.33"], evaluating ...
          -> Take improving step to neighbour alpha=200 beta=0.001 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=0.33 (0.0 [based on 7 runs with cutoff 1000000000.0]) with flip 7

          
============= Performing 1 bonus runs of state: alpha=200 beta=0.001 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=0.33 (0.0 [based on 7 runs with cutoff 1000000000.0]) ============ 

State wants more detail (7+1) than incumbent (7), doing incumbent first:
alpha=200 beta=0.001 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=0.33 (0.0 [based on 7 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=400 probBestIndividual=0.8 probReversal=0.33 probSingle=0.33 (0.0 [based on 7 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 5.1999999999999975, 0.0 [8, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
          -> After 1 bonus runs: alpha=200 beta=0.001 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.2 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=0.33 (0.0 [based on 8 runs with cutoff 1000000000.0])

    Changing ["intraMutationRate: 0.2->0.1"], evaluating ...
          -> Take improving step to neighbour alpha=200 beta=0.001 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=0.33 (0.0 [based on 8 runs with cutoff 1000000000.0]) with flip 8

          
============= Performing 1 bonus runs of state: alpha=200 beta=0.001 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=0.33 (0.0 [based on 8 runs with cutoff 1000000000.0]) ============ 

State wants more detail (8+1) than incumbent (8), doing incumbent first:
alpha=200 beta=0.001 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=0.33 (0.0 [based on 8 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=400 probBestIndividual=0.8 probReversal=0.33 probSingle=0.33 (0.0 [based on 8 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 6.199999999999994, 0.0 [9, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
          -> After 1 bonus runs: alpha=200 beta=0.001 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=0.33 (0.0 [based on 9 runs with cutoff 1000000000.0])

    Changing ["alpha: 200->10"], evaluating ...
          -> Take improving step to neighbour alpha=10 beta=0.001 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=0.33 (0.0 [based on 9 runs with cutoff 1000000000.0]) with flip 9

          
============= Performing 1 bonus runs of state: alpha=10 beta=0.001 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=0.33 (0.0 [based on 9 runs with cutoff 1000000000.0]) ============ 

State wants more detail (9+1) than incumbent (9), doing incumbent first:
alpha=10 beta=0.001 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=0.33 (0.0 [based on 9 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=400 probBestIndividual=0.8 probReversal=0.33 probSingle=0.33 (0.0 [based on 9 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 7.29999999999999, 0.0 [10, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
          -> After 1 bonus runs: alpha=10 beta=0.001 bound=3.0 crossoverRate=0.4 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=0.33 (0.0 [based on 10 runs with cutoff 1000000000.0])

    Changing ["crossoverRate: 0.4->1.0"], evaluating ...
        -> worse: (194.6 [based on 5 runs with cutoff 1000000000.0])
    Changing ["probSingle: 0.33->0.0"], evaluating ...
        -> worse: (222.0 [based on 6 runs with cutoff 1000000000.0])
    Changing ["crossoverRate: 0.4->0.6"], evaluating ...
          -> Take improving step to neighbour alpha=10 beta=0.001 bound=3.0 crossoverRate=0.6 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=0.33 (0.0 [based on 10 runs with cutoff 1000000000.0]) with flip 10

          
============= Performing 3 bonus runs of state: alpha=10 beta=0.001 bound=3.0 crossoverRate=0.6 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=0.33 (0.0 [based on 10 runs with cutoff 1000000000.0]) ============ 

State wants more detail (10+1) than incumbent (10), doing incumbent first:
alpha=10 beta=0.001 bound=3.0 crossoverRate=0.6 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=0.33 (0.0 [based on 10 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=400 probBestIndividual=0.8 probReversal=0.33 probSingle=0.33 (0.0 [based on 10 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 9.599999999999982, 0.0 [11, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
State wants more detail (11+1) than incumbent (11), doing incumbent first:
alpha=10 beta=0.001 bound=3.0 crossoverRate=0.6 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=0.33 (0.0 [based on 11 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=400 probBestIndividual=0.8 probReversal=0.33 probSingle=0.33 (0.0 [based on 11 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 9.799999999999981, 0.0 [12, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
State wants more detail (12+1) than incumbent (12), doing incumbent first:
alpha=10 beta=0.001 bound=3.0 crossoverRate=0.6 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=0.33 (0.0 [based on 12 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=400 probBestIndividual=0.8 probReversal=0.33 probSingle=0.33 (0.0 [based on 12 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 9.99999999999998, 74.3076923076923 [13, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
101/10000, 10.09999999999998/100000000.0
          -> After 3 bonus runs: alpha=10 beta=0.001 bound=3.0 crossoverRate=0.6 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=0.9 probReversal=0.75 probSingle=0.33 (102.23076923076923 [based on 13 runs with cutoff 1000000000.0])

    Changing ["beta: 0.001->1.0"], evaluating ...
probBestIndividual=0.9 probReversal=1.0 probSingle=0.33 (0.0 [based on 12 runs with cutoff 1000000000.0]) with flip 12

          
============= Performing 1 bonus runs of state: alpha=10 beta=0.001 bound=3.0 crossoverRate=0.5 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=0.9 probReversal=1.0 probSingle=0.33 (0.0 [based on 12 runs with cutoff 1000000000.0]) ============ 

State wants more detail (12+1) than incumbent (12), doing incumbent first:
alpha=10 beta=0.001 bound=3.0 crossoverRate=0.5 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=0.9 probReversal=1.0 probSingle=0.33 (0.0 [based on 12 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=400 probBestIndividual=0.8 probReversal=0.33 probSingle=0.33 (0.0 [based on 12 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 11.199999999999976, 0.0 [13, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
          -> After 1 bonus runs: alpha=10 beta=0.001 bound=3.0 crossoverRate=0.5 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=0.9 probReversal=1.0 probSingle=0.33 (0.0 [based on 13 runs with cutoff 1000000000.0])

    Changing ["beta: 0.001->1.0"], evaluating ...
        -> worse: (1090.0 [based on 4 runs with cutoff 1000000000.0])
    Changing ["populationSize: 500->800"], evaluating ...
        -> worse: (486.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["probBestIndividual: 0.9->1.0"], evaluating ...
          -> Take improving step to neighbour alpha=10 beta=0.001 bound=3.0 crossoverRate=0.5 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=1.0 probReversal=1.0 probSingle=0.33 (0.0 [based on 13 runs with cutoff 1000000000.0]) with flip 13

          
============= Performing 3 bonus runs of state: alpha=10 beta=0.001 bound=3.0 crossoverRate=0.5 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=1.0 probReversal=1.0 probSingle=0.33 (0.0 [based on 13 runs with cutoff 1000000000.0]) ============ 

State wants more detail (13+1) than incumbent (13), doing incumbent first:
alpha=10 beta=0.001 bound=3.0 crossoverRate=0.5 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=1.0 probReversal=1.0 probSingle=0.33 (0.0 [based on 13 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=400 probBestIndividual=0.8 probReversal=0.33 probSingle=0.33 (0.0 [based on 13 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 13.299999999999969, 0.0 [14, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
State wants more detail (14+1) than incumbent (14), doing incumbent first:
alpha=10 beta=0.001 bound=3.0 crossoverRate=0.5 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=1.0 probReversal=1.0 probSingle=0.33 (0.0 [based on 14 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=400 probBestIndividual=0.8 probReversal=0.33 probSingle=0.33 (0.0 [based on 14 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 13.499999999999968, 0.0 [15, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
State wants more detail (15+1) than incumbent (15), doing incumbent first:
alpha=10 beta=0.001 bound=3.0 crossoverRate=0.5 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=1.0 probReversal=1.0 probSingle=0.33 (0.0 [based on 15 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=400 probBestIndividual=0.8 probReversal=0.33 probSingle=0.33 (0.0 [based on 15 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 13.699999999999967, 0.0 [16, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
          -> After 3 bonus runs: alpha=10 beta=0.001 bound=3.0 crossoverRate=0.5 elitism=0.20 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=1.0 probReversal=1.0 probSingle=0.33 (0.0 [based on 16 runs with cutoff 1000000000.0])

    Changing ["elitism: 0.20->0.05"], evaluating ...
          -> Take improving step to neighbour alpha=10 beta=0.001 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=1.0 probReversal=1.0 probSingle=0.33 (0.0 [based on 16 runs with cutoff 1000000000.0]) with flip 14

          
============= Performing 1 bonus runs of state: alpha=10 beta=0.001 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=1.0 probReversal=1.0 probSingle=0.33 (0.0 [based on 16 runs with cutoff 1000000000.0]) ============ 

State wants more detail (16+1) than incumbent (16), doing incumbent first:
alpha=10 beta=0.001 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=1.0 probReversal=1.0 probSingle=0.33 (0.0 [based on 16 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=400 probBestIndividual=0.8 probReversal=0.33 probSingle=0.33 (0.0 [based on 16 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 15.499999999999961, 0.0 [17, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
          -> After 1 bonus runs: alpha=10 beta=0.001 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=500 probBestIndividual=1.0 probReversal=1.0 probSingle=0.33 (0.0 [based on 17 runs with cutoff 1000000000.0])

    Changing ["interAttemptRate: 5->20"], evaluating ...
dividual=0.7 probReversal=1.0 probSingle=0.33 (0.0 [based on 16 runs with cutoff 1000000000.0]) with flip 16

          
============= Performing 1 bonus runs of state: alpha=10 beta=1.0 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=400 probBestIndividual=0.7 probReversal=1.0 probSingle=0.33 (0.0 [based on 16 runs with cutoff 1000000000.0]) ============ 

State wants more detail (16+1) than incumbent (16), doing incumbent first:
alpha=10 beta=1.0 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=400 probBestIndividual=0.7 probReversal=1.0 probSingle=0.33 (0.0 [based on 16 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=400 probBestIndividual=0.8 probReversal=0.33 probSingle=0.33 (0.0 [based on 16 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 17.799999999999983, 0.0 [17, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
          -> After 1 bonus runs: alpha=10 beta=1.0 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.25 intraMutationRate=0.1 populationSize=400 probBestIndividual=0.7 probReversal=1.0 probSingle=0.33 (0.0 [based on 17 runs with cutoff 1000000000.0])

    Changing ["interAttemptRate: 5->20"], evaluating ...
          -> Take improving step to neighbour alpha=10 beta=1.0 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=20 interMutationRate=0.25 intraMutationRate=0.1 populationSize=400 probBestIndividual=0.7 probReversal=1.0 probSingle=0.33 (0.0 [based on 17 runs with cutoff 1000000000.0]) with flip 17

          
============= Performing 1 bonus runs of state: alpha=10 beta=1.0 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=20 interMutationRate=0.25 intraMutationRate=0.1 populationSize=400 probBestIndividual=0.7 probReversal=1.0 probSingle=0.33 (0.0 [based on 17 runs with cutoff 1000000000.0]) ============ 

State wants more detail (17+1) than incumbent (17), doing incumbent first:
alpha=10 beta=1.0 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=20 interMutationRate=0.25 intraMutationRate=0.1 populationSize=400 probBestIndividual=0.7 probReversal=1.0 probSingle=0.33 (0.0 [based on 17 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=400 probBestIndividual=0.8 probReversal=0.33 probSingle=0.33 (0.0 [based on 17 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 19.70000000000001, 0.0 [18, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
          -> After 1 bonus runs: alpha=10 beta=1.0 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=20 interMutationRate=0.25 intraMutationRate=0.1 populationSize=400 probBestIndividual=0.7 probReversal=1.0 probSingle=0.33 (0.0 [based on 18 runs with cutoff 1000000000.0])

    Changing ["populationSize: 400->50"], evaluating ...
201/10000, 20.100000000000016/100000000.0
        -> worse: (52.77777777777778 [based on 18 runs with cutoff 1000000000.0])
    Changing ["bound: 3.0->4.0"], evaluating ...
        -> worse: (190.28571428571428 [based on 7 runs with cutoff 1000000000.0])
    Changing ["beta: 1.0->0.5"], evaluating ...
          -> Take improving step to neighbour alpha=10 beta=0.5 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=20 interMutationRate=0.25 intraMutationRate=0.1 populationSize=400 probBestIndividual=0.7 probReversal=1.0 probSingle=0.33 (0.0 [based on 18 runs with cutoff 1000000000.0]) with flip 18

          
============= Performing 3 bonus runs of state: alpha=10 beta=0.5 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=20 interMutationRate=0.25 intraMutationRate=0.1 populationSize=400 probBestIndividual=0.7 probReversal=1.0 probSingle=0.33 (0.0 [based on 18 runs with cutoff 1000000000.0]) ============ 

State wants more detail (18+1) than incumbent (18), doing incumbent first:
alpha=10 beta=0.5 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=20 interMutationRate=0.25 intraMutationRate=0.1 populationSize=400 probBestIndividual=0.7 probReversal=1.0 probSingle=0.33 (0.0 [based on 18 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutationRate=0.25 intraMutationRate=0.2 populationSize=400 probBestIndividual=0.8 probReversal=0.33 probSingle=0.33 (0.0 [based on 18 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 24.200000000000074, 0.0 [19, 1000000000.0]. With state alpha=100, beta=0.001, bound=2.0, crossoverRate=0.6, elitism=0.01, interAttemptRate=10, interMutationRate=0.25, intraMutationRate=0.2, populationSize=400, probBestIndividual=0.8, probReversal=0.33, probSingle=0.33
State wants more detail (19+1) than incumbent (19), doing incumbent first:
alpha=10 beta=0.5 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=20 interMutationRate=0.25 intraMutationRate=0.1 populationSize=400 probBestIndividual=0.7 probReversal=1.0 probSingle=0.33 (0.0 [based on 19 runs with cutoff 1000000000.0])
alpha=100 beta=0.001 bound=2.0 crossoverRate=0.6 elitism=0.01 interAttemptRate=10 interMutatio          -> Take improving step to neighbour alpha=10 beta=1.0 bound=4.0 crossoverRate=1.0 elitism=0.1 interAttemptRate=20 interMutationRate=0.5 intraMutationRate=0.2 populationSize=50 probBestIndividual=0.7 probReversal=0.50 probSingle=0.33 (0.0 [based on 20 runs with cutoff 1000000000.0]) with flip 17

          
============= Performing 6 bonus runs of state: alpha=10 beta=1.0 bound=4.0 crossoverRate=1.0 elitism=0.1 interAttemptRate=20 interMutationRate=0.5 intraMutationRate=0.2 populationSize=50 probBestIndividual=0.7 probReversal=0.50 probSingle=0.33 (0.0 [based on 20 runs with cutoff 1000000000.0]) ============ 

State wants more detail (20+1) than incumbent (20), doing incumbent first:
alpha=10 beta=1.0 bound=4.0 crossoverRate=1.0 elitism=0.1 interAttemptRate=20 interMutationRate=0.5 intraMutationRate=0.2 populationSize=50 probBestIndividual=0.7 probReversal=0.50 probSingle=0.33 (0.0 [based on 20 runs with cutoff 1000000000.0])
alpha=200 beta=10.0 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=1000 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 20 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 28.500000000000135, 0.0 [21, 1000000000.0]. With state alpha=200, beta=10.0, bound=3.0, crossoverRate=0.5, elitism=0.05, interAttemptRate=5, interMutationRate=0.2, intraMutationRate=0.2, populationSize=1000, probBestIndividual=0.9, probReversal=0.75, probSingle=1.0
State wants more detail (21+1) than incumbent (21), doing incumbent first:
alpha=10 beta=1.0 bound=4.0 crossoverRate=1.0 elitism=0.1 interAttemptRate=20 interMutationRate=0.5 intraMutat        -> worse: (322.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["crossoverRate: 0.5->0.2"], evaluating ...
        -> worse: (443.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["populationSize: 400->800"], evaluating ...
        -> worse: (63.666666666666664 [based on 21 runs with cutoff 1000000000.0])
    Changing ["alpha: 10->200"], evaluating ...
        -> worse: (1363.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["probReversal: 1.0->0.33"], evaluating ...
        -> worse: (1326.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["crossoverRate: 0.5->0.3"], evaluating ...
        -> worse: (1414.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["beta: 0.5->0.01"], evaluating ...
        -> worse: (1332.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["probReversal: 1.0->0.0"], evaluating ...
        -> worse: (1329.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["intraMutationRate: 0.1->0.75"], evaluating ...
        -> worse: (1360.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["populationSize: 400->100"], evaluating ...
        -> worse: (1318.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["interAttemptRate: 20->5"], evaluating ...
        -> worse: (1326.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["intraMutationRate: 0.1->1.0"], evaluating ...
        -> worse: (1481.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["probReversal: 1.0->0.25"], evaluating ...
        -> worse: (1330.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["beta: 0.5->0.001"], evaluating ...
ent first:
alpha=10 beta=1.0 bound=4.0 crossoverRate=1.0 elitism=0.1 interAttemptRate=20 interMutationRate=0.5 intraMutationRate=0.2 populationSize=50 probBestIndividual=0.7 probReversal=0.50 probSingle=0.33 (0.0 [based on 23 runs with cutoff 1000000000.0])
alpha=200 beta=10.0 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=1000 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 23 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 29.100000000000144, 0.0 [24, 1000000000.0]. With state alpha=200, beta=10.0, bound=3.0, crossoverRate=0.5, elitism=0.05, interAttemptRate=5, interMutationRate=0.2, intraMutationRate=0.2, populationSize=1000, probBestIndividual=0.9, probReversal=0.75, probSingle=1.0
State wants more detail (24+1) than incumbent (24), doing incumbent first:
alpha=10 beta=1.0 bound=4.0 crossoverRate=1.0 elitism=0.1 interAttemptRate=20 interMutationRate=0.5 intraMutationRate=0.2 populationSize=50 probBestIndividual=0.7 probReversal=0.50 probSingle=0.33 (0.0 [based on 24 runs with cutoff 1000000000.0])
alpha=200 beta=10.0 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=1000 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 24 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 29.300000000000146, 0.0 [25, 1000000000.0]. With state alpha=200, beta=10.0, bound=3.0, crossoverRate=0.5, elitism=0.05, interAttemptRate=5, interMutationRate=0.2, intraMutationRate=0.2, populationSize=1000, probBestIndividual=0.9, probReversal=0.75, probSingle=1.0
State wants more detail (25+1) than incumbent (25), doing incumbent first:
alpha=10 beta=1.0 bound=4.0 crossoverRate=1.0 elitism=0.1 interAttemptRate=20 interMutationRate=0.5 intraMutationRate=0.2 populationSize=50 probBestIndividual=0.7 probReversal=0.50 probSingle=0.33 (0.0 [based on 25 runs with cutoff 1000000000.0])
alpha=200 beta=10.0 bound=3.0 crossoverRate=0.5 elitism=0.05 interAttemptRate=5 interMutationRate=0.2 intraMutationRate=0.2 populationSize=1000 probBestIndividual=0.9 probReversal=0.75 probSingle=1.0 (0.0 [based on 25 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 29.50000000000015, 0.0 [26, 1000000000.0]. With state alpha=200, beta=10.0, bound=3.0, crossoverRate=0.5, elitism=0.05, interAttemptRate=5, interMutationRate=0.2, intraMutationRate=0.2, populationSize=1000, probBestIndividual=0.9        -> worse: (72.61538461538461 [based on 13 runs with cutoff 1000000000.0])
    Changing ["alpha: 100->150"], evaluating ...
        -> worse: (971.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["interAttemptRate: 5->1"], evaluating ...
ngle=0.33 (0.0 [based on 26 runs with cutoff 1000000000.0])

    Changing ["bound: 4.0->3.0"], evaluating ...
301/10000, 30.100000000000158/100000000.0
